networks:
  internal:
    driver: bridge
  database:
    driver: bridge

volumes:
  sql_data:

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ${DB_PASS}
    ports:
      - "${DB_PORT}:1433"
    restart: always
    volumes:
      - sql_data:/var/opt/mssql
    networks:
      - database

  customers:
    build:
      context: ./src
      dockerfile: services/Customers/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      ASPNETCORE_URLS: "http://+:8080"
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      CUSTOMERS_DB_NAME: ${DB_NAME_CONSUMER}
    networks:
      - internal
      - database
    depends_on:
      - sqlserver

  products:
    build:
      context: ./src
      dockerfile: services/Products/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      ASPNETCORE_URLS: "http://+:8080"
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      PRODUCTS_DB_NAME: ${DB_NAME_PRODUCT}
    networks:
      - internal
      - database
    depends_on:
      - sqlserver

  gateway:
    build:
      context: ./src
      dockerfile: ClientGateway/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      CustomersMicroservice: "http://customers:8080"
      ProductsMicroservice: "http://products:8080"
    ports:
      - "${GATEWAY_PORT}:8080"
    depends_on:
      - customers
      - products
    networks:
      - internal
