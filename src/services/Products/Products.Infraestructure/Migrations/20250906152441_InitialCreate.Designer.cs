// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Products.Infraestructure.Persistence;

#nullable disable

namespace Products.Infraestructure.Migrations
{
    [DbContext(typeof(ProductsDbContext))]
    [Migration("20250906152441_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Products.Domain.Entities.ProductControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PesoDrenado")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("PesoEnvase")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("PorcentajeMiga")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("Producto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ProductControls", (string)null);
                });

            modelBuilder.Entity("Products.Domain.Entities.ProductControlDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,3)");

                    b.Property<Guid>("ProductControlId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductControlId");

                    b.ToTable("ProductControlDetails", (string)null);
                });

            modelBuilder.Entity("Products.Domain.Entities.ProductControl", b =>
                {
                    b.OwnsOne("Products.Domain.ValueObjects.PesoNeto", "PesoNeto", b1 =>
                        {
                            b1.Property<Guid>("ProductControlId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,3)")
                                .HasColumnName("PesoNeto");

                            b1.HasKey("ProductControlId");

                            b1.ToTable("ProductControls");

                            b1.WithOwner()
                                .HasForeignKey("ProductControlId");
                        });

                    b.Navigation("PesoNeto")
                        .IsRequired();
                });

            modelBuilder.Entity("Products.Domain.Entities.ProductControlDetail", b =>
                {
                    b.HasOne("Products.Domain.Entities.ProductControl", null)
                        .WithMany("Detalles")
                        .HasForeignKey("ProductControlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Products.Domain.ValueObjects.TipoControl", "TipoControl", b1 =>
                        {
                            b1.Property<Guid>("ProductControlDetailId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("TipoControl");

                            b1.HasKey("ProductControlDetailId");

                            b1.ToTable("ProductControlDetails");

                            b1.WithOwner()
                                .HasForeignKey("ProductControlDetailId");
                        });

                    b.Navigation("TipoControl")
                        .IsRequired();
                });

            modelBuilder.Entity("Products.Domain.Entities.ProductControl", b =>
                {
                    b.Navigation("Detalles");
                });
#pragma warning restore 612, 618
        }
    }
}
